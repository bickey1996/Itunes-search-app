{"version":3,"sources":["components/search-bar/index.js","components/cards/artists/ArtistsCard.js","components/filter/filter.js","components/no-results/No-results.js","containers/home/index.js","App.js","reportWebVitals.js","store/dataReducer.js","store/index.js","api/Search.js","sagas/searchSagas.js","sagas/index.js","index.js"],"names":["items","SearchBar","props","state","data","isAboutVisible","selectedTab","searchedTerm","onEnterPress","bind","id","e","preventDefault","this","setState","temp","target","parentElement","textContent","onSearchSubmit","value","keyCode","className","type","placeholder","onKeyDown","data-test","map","item","href","name","onClick","onSortClicked","Component","ArtistsCard","isPreviewVisible","isPlaying","audios","document","getElementsByTagName","i","len","length","pause","imageUrl","artworkUrl100","formattedDate","moment","releaseDate","format","style","backgroundImage","playVideo","artistName","collectionName","shortDescription","longDescription","controls","autoPlay","src","previewUrl","Filter","console","log","index","NoResults","Home","search","connect","dispatch","searchText","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","status","dataReducer","action","error","rootReducer","getSearchData","searchtext","a","axios","get","call","Search","res","put","results","rootSaga","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","logger","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ebb9e8a2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\n\r\nlet placeholderText = \"Search iTune Music\";\r\nlet items = [\r\n  \"all\",\r\n  \"movie\",\r\n  \"podcast\",\r\n  \"music\",\r\n  \"musicVideo\",\r\n  \"audiobook\",\r\n  \"shortFilm\",\r\n];\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n      isAboutVisible: false,\r\n      selectedTab: 0,\r\n      searchedTerm: \"\",\r\n    };\r\n\r\n    this.onEnterPress = this.onEnterPress.bind(this);\r\n  }\r\n\r\n  onSortClicked(id, e) {\r\n    e.preventDefault();\r\n    this.setState({ selectedTab: id });\r\n    let temp =\r\n      \"?term=\" +\r\n      this.state.searchedTerm +\r\n      \"&media=\" +\r\n      e.target.parentElement.textContent;\r\n    return this.props.onSearchSubmit(temp);\r\n  }\r\n\r\n  onEnterPress(value, keyCode) {\r\n    if (keyCode === 13) {\r\n      this.setState({\r\n        searchedTerm: value,\r\n      });\r\n      return this.props.onSearchSubmit(\"?term=\" + value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-holder\">\r\n        <div className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            placeholder={placeholderText}\r\n            onKeyDown={(e) => this.onEnterPress(e.target.value, e.keyCode)}\r\n            data-test=\"searchInput\"\r\n          />\r\n        </div>\r\n\r\n        <ul className=\"sorter\">\r\n          {items.map((item, id) => {\r\n            return (\r\n              <li key={id}>\r\n                <a\r\n                  href=\"\"\r\n                  className={this.state.selectedTab === id ? \"active\" : \"\"}\r\n                  name={item}\r\n                  data-test=\"tabButton\"\r\n                  onClick={this.onSortClicked.bind(this, id)}\r\n                >\r\n                  {item}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./ArtistsCard.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ArtistsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPreviewVisible: false,\r\n      isPlaying: false,\r\n    };\r\n  }\r\n\r\n  playVideo() {\r\n    this.setState({\r\n      isPreviewVisible: !this.state.isPreviewVisible,\r\n      isPlaying: !this.state.isPlaying,\r\n    });\r\n\r\n    let audios = document.getElementsByTagName(\"audio\");\r\n    for (let i = 0, len = audios.length; i < len; i++) {\r\n      // if(audios[i] != e.target){\r\n      audios[i].pause();\r\n      //}\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const imageUrl = this.props.data.artworkUrl100;\r\n    const formattedDate = moment(this.props.data.releaseDate).format(\r\n      \"DD MMM YY\"\r\n    );\r\n\r\n    return (\r\n      <div className=\"artists-card\" data-test=\"ArtistCard\">\r\n        <div className=\"artists-holder\">\r\n          <div className=\"poster-holder\">\r\n            <div\r\n              className={\r\n                \"image-poster \" +\r\n                (this.state.isPreviewVisible ? \"artists-preview-show\" : \"\")\r\n              }\r\n              style={{ backgroundImage: `url(${imageUrl})` }}\r\n            >\r\n              <div\r\n                className=\"artists-preview\"\r\n                onClick={this.playVideo.bind(this)}\r\n              >\r\n                {this.state.isPlaying ? \"Stop\" : \"Preview\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"artists-data\">\r\n            <h2>{this.props.data.artistName}</h2>\r\n            <div className=\"artists-scrollable\">\r\n              <p>\r\n                <b>Release Date </b>: {formattedDate}\r\n              </p>\r\n              <p>\r\n                <b>Collection </b>: {this.props.data.collectionName}\r\n              </p>\r\n              {this.props.data.shortDescription ? (\r\n                <p>\r\n                  <b>Description </b>: {this.props.data.longDescription}{\" \"}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.isPreviewVisible ? (\r\n            <audio controls autoPlay>\r\n              <source\r\n                src={this.props.data.previewUrl}\r\n                type=\"audio/ogg\"\r\n              ></source>\r\n              <source\r\n                src={this.props.data.previewUrl}\r\n                type=\"audio/mpeg\"\r\n              ></source>\r\n            </audio>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nArtistsCard.propTypes = {\r\n  data: PropTypes.shape({\r\n    artworkUrl100: PropTypes.string,\r\n    previewUrl: PropTypes.string,\r\n    collectionName: PropTypes.string,\r\n    shortDescription: PropTypes.string,\r\n    longDescription: PropTypes.string,\r\n    artistName: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default ArtistsCard;\r\n","import React, { Component } from \"react\";\r\nimport \"./filter.css\";\r\nimport ArtistsCard from \"../cards/artists/ArtistsCard\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"filter\">\r\n        <div className=\"Artists-holder\">\r\n          {this.props.data\r\n            ? this.props.data.data.map((item, index) => {\r\n                return <ArtistsCard key={index} data={item} />;\r\n              })\r\n            : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nFilter.propTypes = {\r\n  data: PropTypes.shape({\r\n    data: PropTypes.array,\r\n  }),\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport \"./No-results.css\";\r\n\r\nclass NoResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let nothingToShowText =\r\n      \"I don't have to show anything to anyone, There is nothing to prove.\";\r\n    return (\r\n      <div className=\"no-results\" data-test=\"No-Results\">\r\n        <h1>{nothingToShowText}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoResults;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchBar from \"../../components/search-bar/index\";\r\nimport Filter from \"../../components/filter/filter\";\r\nimport NoResults from \"../../components/no-results/No-results\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"mainBody\" data-test=\"home\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <SearchBar onSearchSubmit={this.props.search} />\r\n              {this.props.data <= 0 ? <NoResults /> : null}\r\n              <Filter data={this.props.data} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  search: (searchText) =>\r\n    dispatch({ type: \"FETCH_DATAS\", searchText: searchText }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/home\";\r\n\r\nimport \"./theme/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultState = {\r\n  status: \"NOT_FETCHED\",\r\n  data: [],\r\n};\r\n\r\nconst dataReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_DATAS\":\r\n      return { ...state, status: \"FETCHING_DATAS\" };\r\n    case \"FETCH_DATAS_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        status: \"FETCHED_DATAS\",\r\n        data: action.data,\r\n      };\r\n    case \"FETCH_DATAS_FAILED\":\r\n      return {\r\n        ...state,\r\n        status: \"FETCHING_DATAS_FAILED\",\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import dataReducer from \"./dataReducer\";\r\n\r\nconst rootReducer = (state, action) => {\r\n  return dataReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\n\r\nexport const getSearchData = async (searchtext) => {\r\n  console.log(searchtext);\r\n  return axios.get(\"https://itunes.apple.com/search\" + searchtext);\r\n};\r\n\r\nexport default getSearchData;\r\n","import { call } from \"ramda\";\r\nimport Search from \"../api/Search\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport function* search(action) {\r\n  console.log(action);\r\n  try {\r\n    const res = yield call(Search, action.searchText);\r\n    console.log(res);\r\n    yield put({\r\n      type: \"FETCH_DATAS_SUCCESS\",\r\n      data: res.data.results,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: \"FETCH_DATAS_FAILED\",\r\n      error: \"error\",\r\n    });\r\n  }\r\n}\r\n","import { takeLatest } from \"redux-saga/effects\";\r\nimport { search } from \"./searchSagas\";\r\n\r\nexport default function* rootSaga() {\r\n  yield takeLatest(\"FETCH_DATAS\", search);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport rootReducer from \"./store\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport { logger } from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger, sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}